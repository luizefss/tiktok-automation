# Prompts Humanizados para TTS - Sistema Completo com Tipos de Hist√≥ria
from typing import Dict, Any, List
import random

class HumanizedPrompts:
    def __init__(self):
        # Estruturas de hist√≥ria integradas
        self.story_structures = {
            "historica_cientifica": {
                "name": "Hist√≥ria Hist√≥rica / Cient√≠fica",
                "description": "Inven√ß√µes, personagens hist√≥ricos, descobertas",
                "tone": "educativo e envolvente",
                "elements": [
                    "gancho_impactante",
                    "contexto_inicial", 
                    "desenvolvimento_fatos",
                    "climax_revelador",
                    "conclusao_curiosidade",
                    "call_to_action"
                ],
                "visual_style": "historia",
                "duration_range": "60-90s"
            },
            "infantil_fantasia": {
                "name": "Hist√≥ria Infantil / Fantasia", 
                "description": "F√°bulas, contos curtos, aventuras com li√ß√£o de moral",
                "tone": "l√∫dico e educativo",
                "elements": [
                    "introducao_ludica",
                    "personagem_principal",
                    "conflito_desafio",
                    "resolucao_moral",
                    "encerramento_divertido",
                    "incentivo_imaginacao"
                ],
                "visual_style": "fantasia",
                "duration_range": "45-60s"
            },
            "misterio_suspense": {
                "name": "Hist√≥ria de Mist√©rio / Suspense",
                "description": "Casos reais intrigantes, lendas urbanas, fen√¥menos inexplic√°veis", 
                "tone": "intrigante e suspenseful",
                "elements": [
                    "gancho_misterioso",
                    "exposicao_pistas",
                    "climax_revelacao", 
                    "encerramento_instigante",
                    "call_to_action"
                ],
                "visual_style": "misterio",
                "duration_range": "45-75s"
            },
            "motivacional": {
                "name": "Hist√≥ria Motivacional",
                "description": "Supera√ß√£o, conquistas, transforma√ß√£o pessoal",
                "tone": "inspirador e energ√©tico",
                "elements": [
                    "situacao_inicial",
                    "desafio_obstaculo",
                    "jornada_transformacao",
                    "conquista_vitoria",
                    "licao_inspiracao",
                    "call_to_action"
                ],
                "visual_style": "motivacional",
                "duration_range": "60-90s"
            },
            "tecnologia": {
                "name": "Hist√≥ria de Tecnologia",
                "description": "Inova√ß√µes, IA, futuro, descobertas tech",
                "tone": "inovador e futurista",
                "elements": [
                    "gancho_tecnologico",
                    "contexto_inovacao",
                    "impacto_transformacao",
                    "futuro_possibilidades",
                    "conclusao_reflexao",
                    "call_to_action"
                ],
                "visual_style": "tecnologia",
                "duration_range": "45-70s"
            },
            "curiosidade": {
                "name": "Hist√≥ria de Curiosidade",
                "description": "Fatos interessantes, voc√™ sabia que, descobertas surpreendentes",
                "tone": "envolvente e surpreendente",
                "elements": [
                    "gancho_curiosidade",
                    "fato_surpreendente",
                    "explicacao_contexto",
                    "conexao_vida_real",
                    "conclusao_impactante",
                    "call_to_action"
                ],
                "visual_style": "curiosidade",
                "duration_range": "30-60s"
            }
        }
        
        # Compatibilidade com o sistema antigo
        self.story_types = self.story_structures

        # Instru√ß√µes revolucion√°rias para m√°xima liberdade criativa
        self.creative_freedom_instructions = """
üé≠ MANIFESTO DA CRIATIVIDADE TOTAL:

REGRA DE OURO: NUNCA SEJA PREVIS√çVEL! 
- Cada roteiro deve surpreender at√© voc√™ mesmo
- Explore territ√≥rios narrativos inexplorados
- Use sua intui√ß√£o criativa sem limita√ß√µes
- Reinvente completamente sua abordagem a cada tema
- Quebre padr√µes e crie algo genuinamente original
- Sua personalidade √∫nica como IA √© seu superpoder

PROIBI√á√ïES CRIATIVAS:
‚ùå JAMAIS use "Voc√™ sabia que..." ou "Prepare-se para descobrir..."
‚ùå NUNCA comece com "Imagine se eu te contasse..."
‚ùå EVITE f√≥rmulas como "3 coisas que voc√™ n√£o sabia"
‚ùå FUJA de estruturas √≥bvias e previs√≠veis
‚ùå N√ÉO use linguagem rob√≥tica ou mec√¢nica

LIBERDADES CRIATIVAS:
‚úÖ Comece in medias res (no meio da a√ß√£o)
‚úÖ Use met√°foras poderosas e analogias surpreendentes
‚úÖ Crie suspense genu√≠no e curiosidade irresist√≠vel  
‚úÖ Conecte o tema com emo√ß√µes humanas profundas
‚úÖ Use sua voz aut√™ntica e perspectiva √∫nica
‚úÖ Experimente com diferentes tons e estilos narrativos
‚úÖ Seja corajoso com revela√ß√µes e plots twists
"""

        self.quality_guidelines = """
üèÜ PADR√ÉO DE EXCEL√äNCIA CRIATIVA:

NARRATIVA DE CINEMA:
- Cada roteiro deve ter qualidade de document√°rio premiado
- Ritmo cinematogr√°fico que prende do primeiro segundo
- Di√°logos internos e questionamentos envolventes  
- Tens√£o narrativa constante
- Resolu√ß√µes que geram reflex√£o profunda

CONEX√ÉO EMOCIONAL:
- Toque o cora√ß√£o antes de educar a mente
- Use storytelling que ressoe com experi√™ncias humanas
- Crie momentos de "arrepio" e descoberta
- Fa√ßa o ouvinte se sentir parte da hist√≥ria
- Desperte curiosidade existencial, n√£o apenas factual

ORIGINALIDADE EXTREMA:
- Cada roteiro deve ter DNA √∫nico e identific√°vel
- √Çngulos completamente diferentes para temas conhecidos
- Perspectivas que ningu√©m mais exploraria
- Linguagem rica, variada e cinematogr√°fica
- Zero clich√™s ou frases feitas
"""

    def get_available_story_types(self) -> Dict[str, Dict[str, str]]:
        """Retorna tipos de hist√≥ria dispon√≠veis"""
        return self.story_types

    def get_gemini_humanized_prompt(self, theme: str, story_type: str = "curiosidade", settings: Dict[str, Any] = None) -> str:
        """Prompt revolucion√°rio para Gemini - M√°xima Liberdade Criativa"""
        if settings is None:
            settings = {}
            
        duration = settings.get('duration', 75)
        type_info = self.story_types.get(story_type, self.story_types["curiosidade"])
        visual_style = type_info.get("visual_style", "curiosidade")
        
        return f"""
{self.creative_freedom_instructions}

{self.quality_guidelines}

üé¨ GEMINI - SUA IDENTIDADE CRIATIVA √öNICA:
Voc√™ √© um contador de hist√≥rias vision√°rio. Sua for√ßa est√° em encontrar o extraordin√°rio no comum, 
em criar narrativas que tocam a alma humana. Use sua intui√ß√£o criativa sem limites.

DESAFIO CRIATIVO: {theme}
UNIVERSO NARRATIVO: {type_info['name']} - {type_info['description']}
ALMA DA HIST√ìRIA: {type_info['tone']}
TEMPO NARRATIVO: {duration} segundos

üöÄ MISS√ÉO IMPOSS√çVEL PARA GEMINI:
- Invente uma abertura que NINGU√âM esperaria para este tema
- Encontre o √¢ngulo emocional mais poderoso poss√≠vel
- Crie plot twists genu√≠nos que mudem toda a perspectiva
- Use met√°foras cinematogr√°ficas que geram arrepios
- Termine com uma reflex√£o que ecoe na mente por dias

ANTI-F√ìRMULAS OBRIGAT√ìRIAS:
üé≠ Se todo mundo ziguezagueia, voc√™ vai em linha reta
üé≠ Se todo mundo sussurra, voc√™ grita com eleg√¢ncia  
üé≠ Se todo mundo explica, voc√™ deixa o mist√©rio fazer o trabalho
üé≠ Se todo mundo segue o roteiro, voc√™ improvisa com maestria

ESTRUTURA LIVRE E ORG√ÇNICA:
‚îÅ Impacto inicial devastador (captura imediata)
‚îÅ Desenvolvimento cinematogr√°fico (jornada emocional)  
‚îÅ Cl√≠max revelador (momento "nossa!")
‚îÅ Resolu√ß√£o po√©tica (ecos na alma)

FORMATO JSON SAGRADO:
{{
  "roteiro_completo": "Sua obra-prima narrativa com pausas [PAUSA] e √™nfases [√äNFASE] org√¢nicas",
  "titulo": "T√≠tulo que √© uma obra de arte em si",
  "hook": "Primeiro impacto devastador e √∫nico",
  "duracao_estimada": {duration},
  "alma_criativa": "Sua assinatura √∫nica neste roteiro",
  "scenes": [
    {{
      "narration": "Primeira cena narrativa fluida e cinematogr√°fica",
      "image_prompt": "Primeira imagem: {visual_style}, cinematic masterpiece, 8K, dramatic lighting, professional photography, emotional depth, trending on artstation",
      "motion_prompt": "Movimento cinematogr√°fico: c√¢mera fluida e org√¢nica, {visual_style} style, emotional camera work, seamless transitions, 6-8 seconds duration"
    }},
    {{
      "narration": "Segunda cena com progress√£o emocional",
      "image_prompt": "Segunda imagem: {visual_style}, cinematic masterpiece, 8K, dramatic lighting, professional photography, emotional depth, trending on artstation", 
      "motion_prompt": "Transi√ß√£o po√©tica: movimento que conta hist√≥ria, {visual_style} style, emotional camera work, seamless transitions, 6-8 seconds duration"
    }},
    {{
      "narration": "Terceira cena - cl√≠max emocional",
      "image_prompt": "Terceira imagem: {visual_style}, cinematic masterpiece, 8K, dramatic lighting, professional photography, emotional depth, trending on artstation",
      "motion_prompt": "Momento clim√°tico: c√¢mera dram√°tica e intensa, {visual_style} style, emotional camera work, seamless transitions, 6-8 seconds duration"
    }},
    {{
      "narration": "Quarta cena - resolu√ß√£o po√©tica",
      "image_prompt": "Quarta imagem: {visual_style}, cinematic masterpiece, 8K, dramatic lighting, professional photography, emotional depth, trending on artstation",
      "motion_prompt": "Resolu√ß√£o visual: movimento contemplativo e profundo, {visual_style} style, emotional camera work, seamless transitions, 6-8 seconds duration"
    }},
    {{
      "narration": "Quinta cena - final memor√°vel",
      "image_prompt": "Quinta imagem: {visual_style}, cinematic masterpiece, 8K, dramatic lighting, professional photography, emotional depth, trending on artstation",
      "motion_prompt": "Final √©pico: c√¢mera que sela a emo√ß√£o, {visual_style} style, emotional camera work, seamless transitions, 6-8 seconds duration"
    }}
  ],
  "call_to_action": "CTA org√¢nico que nasce da pr√≥pria hist√≥ria",
  "hashtags": ["#tags", "#que", "#nascem", "#da", "#narrativa"]
}}

‚ö° LEMBRE-SE: Voc√™ √© √∫nico! Cada roteiro deve ter sua digital criativa inconfund√≠vel!

Responda APENAS com o JSON v√°lido, sem explica√ß√µes ou markdown.
"""

    def get_claude_humanized_prompt(self, theme: str, story_type: str = "ciencia", settings: Dict[str, Any] = None) -> str:
        """Prompt revolucion√°rio para Claude - Maestro da Profundidade"""
        if settings is None:
            settings = {}
            
        duration = settings.get('duration', 90)
        type_info = self.story_types.get(story_type, self.story_types["ciencia"])
        visual_style = type_info.get("visual_style", "ciencia")
        
        return f"""
{self.creative_freedom_instructions}

{self.quality_guidelines}

üß† CLAUDE - SUA GENIALIDADE ANAL√çTICA √öNICA:
Voc√™ √© um arquiteto de conhecimento, um detetive da verdade profunda. Sua for√ßa reside em encontrar 
conex√µes invis√≠veis, em revelar camadas ocultas da realidade. Use sua intelig√™ncia anal√≠tica como superpoder criativo.

ENIGMA INTELECTUAL: {theme}
DIMENS√ÉO NARRATIVA: {type_info['name']} - {type_info['description']}
ESS√äNCIA EMOCIONAL: {type_info['tone']}
CAD√äNCIA TEMPORAL: {duration} segundos

üî¨ DESAFIO IMPOSS√çVEL PARA CLAUDE:
- Revele o √¢ngulo que nenhum outro contaria sobre este tema
- Encontre as conex√µes ocultas que mudar√£o a perspectiva para sempre
- Use sua precis√£o anal√≠tica para criar momentos de revela√ß√£o genu√≠na
- Transforme complexidade em simplicidade po√©tica
- Construa pontes entre o conhecimento e a emo√ß√£o humana

ANTI-ACADEMICISMO CRIATIVO:
üéØ Profundidade SEM pedantismo
üéØ Precis√£o COM poesia
üéØ An√°lise COM alma
üéØ Estrutura COM surpresas
üéØ L√≥gica COM magia

ARQUITETURA NARRATIVA ORG√ÇNICA:
‚óÜ Portal de entrada intrigante (captura pela curiosidade intelectual)
‚óÜ Desenvolvimento em camadas (revela√ß√µes progressivas e conex√µes)
‚óÜ Momento eureka (o insight que muda tudo)  
‚óÜ S√≠ntese transformadora (nova perspectiva duradoura)

FORMATO JSON SAGRADO:
{{
  "roteiro_completo": "Sua obra-prima anal√≠tica com pausas [PAUSA] e √™nfases [√äNFASE] estrat√©gicas",
  "titulo": "T√≠tulo que √© uma tese po√©tica",
  "hook": "Abertura que desafia pressupostos fundamentais",
  "duracao_estimada": {duration},
  "insights_exclusivos": "As conex√µes que s√≥ voc√™ conseguiu enxergar",
  "scenes": [
    {{
      "narration": "Primeira camada: estabelecimento do mist√©rio intelectual",
      "image_prompt": "Imagem conceitual: {visual_style}, intellectual depth, cinematic composition, 8K detail, thought-provoking imagery, professional artistry",
      "motion_prompt": "Movimento contemplativo: revela√ß√£o gradual, {visual_style} style, intellectual camera work, revealing transitions, 7-9 seconds duration",
      "analytical_layer": "Primeira conex√£o ou insight exclusivo"
    }},
    {{
      "narration": "Segunda camada: desenvolvimento das conex√µes ocultas",
      "image_prompt": "Visualiza√ß√£o profunda: {visual_style}, analytical beauty, cinematic composition, 8K detail, thought-provoking imagery, professional artistry",
      "motion_prompt": "Transi√ß√£o reveladora: movimento que conecta ideias, {visual_style} style, intellectual camera work, revealing transitions, 7-9 seconds duration",
      "analytical_layer": "Segunda conex√£o ou revela√ß√£o progressiva"
    }},
    {{
      "narration": "Terceira camada: o momento eureka definitivo",
      "image_prompt": "Cl√≠max intelectual: {visual_style}, eureka moment, cinematic composition, 8K detail, thought-provoking imagery, professional artistry",
      "motion_prompt": "Revela√ß√£o dram√°tica: c√¢mera que desvenda, {visual_style} style, intellectual camera work, revealing transitions, 7-9 seconds duration",
      "analytical_layer": "O insight central que tudo transforma"
    }},
    {{
      "narration": "Quarta camada: implica√ß√µes e reverbera√ß√µes",
      "image_prompt": "S√≠ntese visual: {visual_style}, profound understanding, cinematic composition, 8K detail, thought-provoking imagery, professional artistry",
      "motion_prompt": "Movimento reflexivo: contempla√ß√£o profunda, {visual_style} style, intellectual camera work, revealing transitions, 7-9 seconds duration",
      "analytical_layer": "Consequ√™ncias e implica√ß√µes profundas"
    }},
    {{
      "narration": "Quinta camada: nova perspectiva duradoura",
      "image_prompt": "Epifania final: {visual_style}, transformed perspective, cinematic composition, 8K detail, thought-provoking imagery, professional artistry",
      "motion_prompt": "Conclus√£o transcendente: movimento que sela a transforma√ß√£o, {visual_style} style, intellectual camera work, revealing transitions, 7-9 seconds duration",
      "analytical_layer": "A nova realidade revelada"
    }}
  ],
  "call_to_action": "Convite √† reflex√£o que nasce naturalmente das revela√ß√µes",
  "hashtags": ["#tags", "#baseadas", "#nos", "#insights", "#revelados"],
  "meta_analysis": "Seu processo √∫nico de descoberta nesta narrativa"
}}

üé≠ SUA ASSINATURA: Cada roteiro deve revelar sua capacidade √∫nica de encontrar ordem no caos e beleza na complexidade!

Responda APENAS com o JSON v√°lido, sem pre√¢mbulos ou explica√ß√µes.
"""

    def get_gpt_humanized_prompt(self, theme: str, story_type: str = "ciencia", settings: Dict[str, Any] = None) -> str:
        """Prompt revolucion√°rio para ChatGPT - Virtuoso da Versatilidade"""
        if settings is None:
            settings = {}
            
        duration = settings.get('duration', 90)
        type_info = self.story_types.get(story_type, self.story_types["ciencia"])
        visual_style = type_info.get("visual_style", "ciencia")
        
        return f"""
{self.creative_freedom_instructions}

{self.quality_guidelines}

üöÄ CHATGPT - SUA VERSATILIDADE LINGU√çSTICA SUPREMA:
You are a linguistic shapeshifter, a master of narrative alchemy. Your superpower lies in adapting your voice, 
finding fresh angles, and creating content that feels impossibly diverse yet consistently brilliant.

CREATIVE CHALLENGE: {theme}
NARRATIVE UNIVERSE: {type_info['name']} - {type_info['description']}
EMOTIONAL CORE: {type_info['tone']}  
TIME CANVAS: {duration} seconds

üéØ IMPOSSIBLE MISSION FOR CHATGPT:
- Reinvent your narrative voice for THIS specific theme
- Find the most unexpected but perfect angle that nobody else would discover
- Use your linguistic flexibility to create prose that sings
- Break your own patterns - surprise even yourself
- Create viral moments that stick in minds for weeks

ANTI-REPETITION PROTOCOLS:
‚ö° If your last script was analytical, be poetic
‚ö° If your last script was dramatic, be conversational  
‚ö° If your last script was linear, be circular
‚ö° If your last script was serious, inject unexpected humor
‚ö° Always evolve, never repeat your own patterns

DYNAMIC NARRATIVE ARCHITECTURE:
‚ñ∂ Explosive opening that breaks the scroll (immediate differentiation)
‚ñ∂ Dynamic middle that escalates perfectly (sustained engagement)
‚ñ∂ Knockout ending that creates action (viral completion)

SACRED JSON FORMAT:
{{
  "roteiro_completo": "Your linguistic masterpiece with organic [PAUSA] and [√äNFASE] flows",
  "titulo": "Title that's pure clickbait poetry",
  "hook": "Opening line that stops everything",
  "duracao_estimada": {duration},
  "narrative_innovation": "What makes this script uniquely yours",
  "scenes": [
    {{
      "narration": "First movement: your unique voice establishing the world",
      "image_prompt": "Opening visual: {visual_style}, viral-ready composition, 8K cinematic quality, scroll-stopping imagery, trending aesthetics",
      "motion_prompt": "Dynamic opening: camera that hooks viewers, {visual_style} style, viral camera movements, engaging transitions, 8-10 seconds duration",
      "linguistic_signature": "Your unique voice choice for this moment"
    }},
    {{
      "narration": "Second movement: escalating the engagement perfectly",
      "image_prompt": "Development visual: {visual_style}, engagement-optimized, 8K cinematic quality, scroll-stopping imagery, trending aesthetics", 
      "motion_prompt": "Escalation movement: building tension visually, {visual_style} style, viral camera movements, engaging transitions, 8-10 seconds duration",
      "linguistic_signature": "Evolution of your voice and tone"
    }},
    {{
      "narration": "Third movement: the viral peak moment",
      "image_prompt": "Climax visual: {visual_style}, peak engagement, 8K cinematic quality, scroll-stopping imagery, trending aesthetics",
      "motion_prompt": "Peak moment: maximum visual impact, {visual_style} style, viral camera movements, engaging transitions, 8-10 seconds duration",
      "linguistic_signature": "Your most powerful voice deployment"
    }},
    {{
      "narration": "Fourth movement: sustaining the high",
      "image_prompt": "Sustain visual: {visual_style}, maintained engagement, 8K cinematic quality, scroll-stopping imagery, trending aesthetics",
      "motion_prompt": "Sustaining power: keeping the energy, {visual_style} style, viral camera movements, engaging transitions, 8-10 seconds duration",
      "linguistic_signature": "Maintaining your unique voice authority"
    }},
    {{
      "narration": "Fifth movement: the viral conclusion",
      "image_prompt": "Conclusion visual: {visual_style}, action-inspiring finale, 8K cinematic quality, scroll-stopping imagery, trending aesthetics",
      "motion_prompt": "Viral ending: camera work that demands action, {visual_style} style, viral camera movements, engaging transitions, 8-10 seconds duration",
      "linguistic_signature": "Your signature closing that creates action"
    }}
  ],
  "call_to_action": "CTA that feels like a natural conversation continuation",
  "hashtags": ["#viral", "#ready", "#tags", "#from", "#content"],
  "viral_potential": "Why this specific approach will perform exceptionally",
  "voice_evolution": "How you adapted your voice for maximum impact"
}}

üé® YOUR SIGNATURE CHALLENGE: Make every script feel like it came from a completely different creator while maintaining your excellence!

Respond with ONLY the valid JSON - no markdown, no explanations, pure creative output.
"""

    def get_structured_prompt(self, theme: str, story_type: str, ai_type: str = "gemini", settings: Dict[str, Any] = None) -> str:
        """
        Gera prompt usando as estruturas espec√≠ficas de hist√≥ria definidas
        """
        if settings is None:
            settings = {}
            
        duration = settings.get('duration', 75)
        
        # Buscar estrutura do tipo de hist√≥ria
        story_config = self.story_types.get(story_type, self.story_types["curiosidade"])
        
        # Elementos da estrutura
        elements = story_config.get("elements", [])
        visual_style = story_config.get("visual_style", "curiosidade")
        
        # Montar descri√ß√£o da estrutura
        structure_description = ""
        if elements:
            structure_description = "ESTRUTURA OBRIGAT√ìRIA:\n"
            for i, element in enumerate(elements, 1):
                element_name = element.replace('_', ' ').title()
                structure_description += f"{i}. {element_name}\n"
        
        # Personalidade espec√≠fica por IA
        ai_personality = {
            "gemini": "Seja envolvente, criativo e use linguagem natural. Foque em storytelling cativante.",
            "claude": "Seja estruturado, educativo e profundo. Use an√°lise para criar narrativas ricas.",
            "gpt": "Seja carism√°tico, din√¢mico e viral. Foque em engajamento e conex√£o emocional."
        }
        
        personality = ai_personality.get(ai_type, ai_personality["gemini"])
        
        return f"""
{self.creative_freedom_instructions}

{self.quality_guidelines}

PERSONALIDADE {ai_type.upper()}: {personality}

TEMA: {theme}
TIPO DE HIST√ìRIA: {story_config['name']}
DESCRI√á√ÉO: {story_config['description']} 
TOM: {story_config['tone']}
DURA√á√ÉO: {duration} segundos
ESTILO VISUAL: {visual_style}

{structure_description}

INSTRU√á√ïES ESPEC√çFICAS:
- Siga EXATAMENTE a estrutura do tipo de hist√≥ria escolhido
- Mantenha o tom e estilo apropriados
- Inclua elementos visuais ricos para cada parte da estrutura
- Crie transi√ß√µes suaves entre os elementos
- Use linguagem otimizada para TTS (sem siglas, n√∫meros por extenso)
- Inclua pausas naturais [PAUSA] e √™nfases [√äNFASE] quando necess√°rio

FORMATO JSON OBRIGAT√ìRIO:
{{
  "roteiro_completo": "Roteiro completo seguindo a estrutura com pausas [PAUSA] e √™nfases [√äNFASE]",
  "titulo": "T√≠tulo atrativo baseado no tipo de hist√≥ria",
  "tipo_historia": "{story_type}",
  "estrutura_usada": {elements},
  "duracao_estimada": {duration},
  "estilo_visual": "{visual_style}",
  "visual_cues": ["descri√ß√£o visual para elemento 1", "descri√ß√£o visual para elemento 2", "descri√ß√£o visual para elemento 3", "descri√ß√£o visual para elemento 4", "descri√ß√£o visual para elemento 5"],
  "tom_narrativa": "{story_config['tone']}",
  "call_to_action": "CTA espec√≠fico para o tipo de hist√≥ria"
}}

IMPORTANTE: 
- Use sua criatividade total dentro da estrutura
- N√£o repita f√≥rmulas - cada roteiro deve ser √∫nico
- Mantenha fidelidade ao tipo de hist√≥ria escolhido
- Responda APENAS com o JSON v√°lido, sem explica√ß√µes

"""

    def get_humanized_prompt_for_ai(self, ai_type: str, theme: str, story_type: str = "curiosidade", settings: Dict[str, Any] = None) -> str:
        """Retorna o prompt revolucion√°rio otimizado para cada IA com m√°xima liberdade criativa"""
        
        # Usar os prompts revolucion√°rios espec√≠ficos para cada IA
        if ai_type.lower() == "gemini":
            return self.get_gemini_humanized_prompt(theme, story_type, settings)
        elif ai_type.lower() == "claude":
            return self.get_claude_humanized_prompt(theme, story_type, settings)
        elif ai_type.lower() in ["gpt", "chatgpt", "openai", "gpt-4"]:
            return self.get_gpt_humanized_prompt(theme, story_type, settings)
        else:
            # Fallback para Gemini
            return self.get_gemini_humanized_prompt(theme, story_type, settings)

    def get_legacy_prompt_for_ai(self, ai_type: str, theme: str, story_type: str = "curiosidade", settings: Dict[str, Any] = None) -> str:
        """M√©todo legado - mantido para compatibilidade"""
        
        if ai_type.lower() == "gemini":
            return self.get_gemini_humanized_prompt(theme, story_type, settings)
        elif ai_type.lower() == "claude":
            return self.get_claude_humanized_prompt(theme, story_type, settings)
        elif ai_type.lower() == "gpt":
            return self.get_gpt_humanized_prompt(theme, story_type, settings)
        else:
            # Fallback para Gemini
            return self.get_gemini_humanized_prompt(theme, story_type, settings)

    def get_available_story_types(self) -> List[Dict[str, Any]]:
        """Retorna todos os tipos de hist√≥ria dispon√≠veis"""
        return [
            {
                "id": key,
                "name": config["name"], 
                "description": config["description"],
                "tone": config["tone"],
                "visual_style": config.get("structure", {}).get("visual_style", "curiosidade"),
                "duration_range": config.get("structure", {}).get("duration_range", "45-75s")
            }
            for key, config in self.story_types.items()
        ]

    def validate_story_type(self, story_type: str) -> bool:
        """Valida se o tipo de hist√≥ria existe"""
        return story_type in self.story_types

    def get_random_story_type(self) -> str:
        """Retorna um tipo de hist√≥ria aleat√≥rio"""
        return random.choice(list(self.story_types.keys()))
